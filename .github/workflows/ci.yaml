name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint Code
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit

      - name: Run pre-commit hooks
        run: pre-commit run --all-files

  terraform-validate:
    runs-on: ubuntu-latest
    name: Terraform Validation
    strategy:
      matrix:
        terraform_dir:
          - terraform/aws
          - terraform/azure
          - terraform/digitalocean
          - terraform/kubernetes
          - terraform/helm
          - terraform/kubectl
          - terraform/proxmox
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.8.0'

      - name: Terraform Format Check
        working-directory: ${{ matrix.terraform_dir }}
        run: terraform fmt -check

      - name: Terraform Init
        working-directory: ${{ matrix.terraform_dir }}
        run: terraform init -backend=false

      - name: Terraform Validate
        working-directory: ${{ matrix.terraform_dir }}
        run: terraform validate

  ansible-lint:
    runs-on: ubuntu-latest
    name: Ansible Lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Ansible Lint
        run: |
          pip install ansible-lint

      - name: Run Ansible Lint
        run: |
          find ansible/ -name "*.yaml" -o -name "*.yml" | xargs ansible-lint

  docker-compose-validate:
    runs-on: ubuntu-latest
    name: Docker Compose Validation
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate Docker Compose files
        run: |
          for dir in docker-compose/*/; do
            if [ -f "$dir/compose.yaml" ]; then
              echo "Validating $dir/compose.yaml"
              docker-compose -f "$dir/compose.yaml" config
            fi
          done